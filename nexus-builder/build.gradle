import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'java'
	id 'java-library'
}

def minecraftVersion = "1.16_combat-6"
def fabricLoaderVersion = "0.14.21"
def mixinExtrasVersion = "0.3.6"

version = "${rootProject.version}-${minecraftVersion}"
group = parent.group

base {
	archivesBaseName = "nexus-builder"
}

configurations {
	includeClasspath
	implementation.extendsFrom includeClasspath
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraftVersion}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${fabricLoaderVersion}"
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixinExtrasVersion}")))

	api project(":nexus-api")
	include project(":nexus-api")

	includeClasspath "net.minecrell:terminalconsoleappender:1.3.0"
	includeClasspath "org.jline:jline-terminal-jna:3.20.0"
	includeClasspath "net.java.dev.jna:jna:5.9.0"
}

loom {
	customMinecraftManifest = "https://gist.githubusercontent.com/rizecookey/4c6142baaccc3875f9b227fe22f2ace5/raw/c8ed74b19f7a5315813c9d4b199798b692a8f359/1.16_combat-6.json"
	intermediaryUrl = "https://maven.rizecookey.com/net/fabricmc/intermediary/%1\$s/intermediary-%1\$s-v2.jar"
	accessWidenerPath = file("src/main/resources/nexusbuilder.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archiveBaseName}"}
	}
}

tasks.register('fullJar', RemapJarTask) {
	dependsOn jar
	archiveClassifier = "full"
	input = jar {
		archiveClassifier = "dev"
	}.archiveFile
	addNestedDependencies = true
	remapAccessWidener = true

	from(configurations.includeClasspath.filter { it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/**"
	}
	from(project(":nexus-api").configurations.apiParts.filter { it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/**"
	}

	with jar
}

loom {
	runs {
		testServer {
			server()
			name = "Nexus Test"
			source sourceSets.test
		}
	}
}

artifacts {
	archives(fullJar) {
		builtBy fullJar
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = this.group
			artifactId = this.archivesBaseName
			version = this.version

			from components.java
		}
	}
}
